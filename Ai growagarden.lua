-- Grow a Garden - H∆∞·ªõng D·∫´n C∆° B·∫£n (Ph·∫ßn 1)
-- GUI ƒë∆°n gi·∫£n, n√∫t üíÄ ƒë·ªÉ ·∫©n/hi·ªán, c√≥ th·ªÉ k√©o, hi·ªán n·ªôi dung

local gui = Instance.new("ScreenGui", game.Players.LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "GrowGuide"
local toggle = Instance.new("TextButton", gui)
toggle.Size = UDim2.new(0, 40, 0, 40)
toggle.Position = UDim2.new(0, 10, 0, 10)
toggle.Text = "üíÄ"
toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.ZIndex = 10

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 250)
frame.Position = UDim2.new(0, 60, 0, 60)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Visible = true
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "üå± Grow a Garden - Ph·∫ßn 1"
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.TextColor3 = Color3.new(1, 1, 1)
title.TextSize = 16
title.Font = Enum.Font.SourceSansBold

local textBox = Instance.new("TextLabel", frame)
textBox.Position = UDim2.new(0, 0, 0, 30)
textBox.Size = UDim2.new(1, 0, 1, -30)
textBox.TextWrapped = true
textBox.TextYAlignment = Enum.TextYAlignment.Top
textBox.TextXAlignment = Enum.TextXAlignment.Left
textBox.TextSize = 14
textBox.Font = Enum.Font.SourceSans
textBox.TextColor3 = Color3.new(1, 1, 1)
textBox.BackgroundTransparency = 1
textBox.Text = [[
üìå H∆∞·ªõng d·∫´n c∆° b·∫£n:
- Nhi·ªám v·ª• ch√≠nh: tr·ªìng c√¢y, t∆∞·ªõi n∆∞·ªõc, thu ho·∫°ch, m·ªü r·ªông v∆∞·ªùn.
- Click v√†o c√¢y ƒë·ªÉ t∆∞·ªõi v√† thu ho·∫°ch.
- D√πng ti·ªÅn ƒë·ªÉ n√¢ng c·∫•p watering can, mua c√¢y m·ªõi.
- ∆Øu ti√™n n√¢ng c·∫•p n∆∞·ªõc ƒë·ªÉ nhanh l√™n c·∫•p.
- C√¢y c√†ng m·∫Øc cho ti·ªÅn c√†ng nhi·ªÅu.
]]

toggle.MouseButton1Click:Connect(function()
	frame.Visible = not frame.Visible
end)

-- ƒê·∫∑t trong StarterGui > LocalScript
local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AIHelperGui"
gui.ResetOnSpawn = false

-- Khung ch√≠nh
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 300, 0, 250)
frame.Position = UDim2.new(0, 10, 0.5, -125)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Name = "MainFrame"
frame.Active = true
frame.Draggable = true

-- N√∫t thu nh·ªè
local toggle = Instance.new("TextButton", frame)
toggle.Text = "-"
toggle.Size = UDim2.new(0, 30, 0, 30)
toggle.Position = UDim2.new(1, -35, 0, 5)
toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.Name = "MinimizeBtn"

-- Ti√™u ƒë·ªÅ
local title = Instance.new("TextLabel", frame)
title.Text = "üå± Grow A Garden - Tr·ª£ l√Ω AI"
title.Size = UDim2.new(1, -40, 0, 30)
title.Position = UDim2.new(0, 5, 0, 5)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1, 1, 1)
title.TextXAlignment = Enum.TextXAlignment.Left

-- V√πng hi·ªán ph·∫£n h·ªìi AI
local responseBox = Instance.new("TextLabel", frame)
responseBox.Size = UDim2.new(1, -10, 0, 140)
responseBox.Position = UDim2.new(0, 5, 0, 40)
responseBox.TextWrapped = true
responseBox.Text = "Xin ch√†o! B·∫°n c·∫ßn gi√∫p g√¨ trong Grow a Garden?"
responseBox.TextColor3 = Color3.new(1, 1, 1)
responseBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
responseBox.TextYAlignment = Enum.TextYAlignment.Top
responseBox.TextXAlignment = Enum.TextXAlignment.Left
responseBox.Name = "AIResponse"
responseBox.ClipsDescendants = true

-- √î nh·∫≠p
local input = Instance.new("TextBox", frame)
input.Size = UDim2.new(1, -10, 0, 30)
input.Position = UDim2.new(0, 5, 1, -35)
input.PlaceholderText = "Nh·∫≠p c√¢u h·ªèi v·ªÅ game..."
input.TextColor3 = Color3.new(1, 1, 1)
input.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
input.Name = "InputBox"
input.ClearTextOnFocus = false

-- Thu nh·ªè/M·ªü r·ªông
local isMinimized = false
toggle.MouseButton1Click:Connect(function()
	isMinimized = not isMinimized
	if isMinimized then
		frame.Size = UDim2.new(0, 300, 0, 40)
		toggle.Text = "+"
	else
		frame.Size = UDim2.new(0, 300, 0, 250)
		toggle.Text = "-"
	end
end)

-- üß† L∆∞u v√† hi·ªÉn th·ªã l·ªãch s·ª≠ h·ªôi tho·∫°i
local ChatHistory = {}

-- H√†m th√™m l·ªãch s·ª≠
local function AddToHistory(question, answer)
    table.insert(ChatHistory, {q = question, a = answer})
end

-- GUI hi·ªÉn th·ªã l·ªãch s·ª≠
local historyFrame = Instance.new("ScrollingFrame")
historyFrame.Size = UDim2.new(0, 250, 0, 150)
historyFrame.Position = UDim2.new(0, 10, 0, 230)
historyFrame.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
historyFrame.BorderSizePixel = 1
historyFrame.Parent = screenGui
historyFrame.Visible = true
historyFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
historyFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
historyFrame.ScrollBarThickness = 6

-- H√†m c·∫≠p nh·∫≠t GUI l·ªãch s·ª≠
local function UpdateHistoryUI()
    for _, child in ipairs(historyFrame:GetChildren()) do
        if child:IsA("TextLabel") then child:Destroy() end
    end

    local yPos = 0
    for i, entry in ipairs(ChatHistory) do
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -10, 0, 40)
        label.Position = UDim2.new(0, 5, 0, yPos)
        label.BackgroundTransparency = 1
        label.TextWrapped = true
        label.Text = i..". " .. entry.q .. "\n‚Üí " .. entry.a
        label.TextColor3 = Color3.fromRGB(30, 30, 30)
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Font = Enum.Font.SourceSans
        label.TextSize = 14
        label.Parent = historyFrame

        yPos = yPos + 45
    end

    historyFrame.CanvasSize = UDim2.new(0, 0, 0, yPos)
end

table.insert(QAData, {
    question = "L√†m sao ƒë·ªÉ ki·∫øm ti·ªÅn nhanh trong Grow a Garden?",
    answer = "Tr·ªìng c√¢y c·∫•p cao, n√¢ng c·∫•p watering can v√† th∆∞·ªùng xuy√™n thu ho·∫°ch. Mua pet gi√∫p tƒÉng l·ª£i nhu·∫≠n t·ª´ m·ªói c√¢y."
})

table.insert(QAData, {
    question = "Pet n√†o gi√∫p tƒÉng ti·ªÅn?",
    answer = "C√°c pet hi·∫øm (Rare ho·∫∑c Legendary) c√≥ th·ªÉ tƒÉng 10-30% l·ª£i nhu·∫≠n m·ªói c√¢y. H√£y m·ªü tr·ª©ng ho·∫∑c mua trong shop pet."
})

table.insert(QAData, {
    question = "C√≥ n√™n d√πng gem ƒë·ªÉ tƒÉng ti·ªÅn kh√¥ng?",
    answer = "C√≥, b·∫°n c√≥ th·ªÉ d√πng gem ƒë·ªÉ mua c√°c boost nh∆∞ 'Double Coins' ƒë·ªÉ tƒÉng g·∫•p ƒë√¥i ti·ªÅn trong 10 ph√∫t."
})

local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "QAGui"

local ToggleBtn = Instance.new("TextButton", ScreenGui)
ToggleBtn.Size = UDim2.new(0, 40, 0, 40)
ToggleBtn.Position = UDim2.new(0, 10, 0, 10)
ToggleBtn.Text = "üíÄ"
ToggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
ToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleBtn.BorderSizePixel = 0
ToggleBtn.ZIndex = 10
ToggleBtn.Draggable = true
ToggleBtn.Active = true

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0, 60, 0, 10)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.Visible = true

local UIListLayout = Instance.new("UIListLayout", MainFrame)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 5)

-- Th√™m khung cu·ªôn n·∫øu c·∫ßn nhi·ªÅu c√¢u h·ªèi
local Scroll = Instance.new("ScrollingFrame", MainFrame)
Scroll.Size = UDim2.new(1, 0, 1, 0)
Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
Scroll.ScrollBarThickness = 4
Scroll.BackgroundTransparency = 1
Scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
Scroll.BorderSizePixel = 0

local QAListLayout = Instance.new("UIListLayout", Scroll)
QAListLayout.SortOrder = Enum.SortOrder.LayoutOrder
QAListLayout.Padding = UDim.new(0, 4)

-- Hi·ªÉn th·ªã c√¢u h·ªèi
for _, qa in ipairs(QAData) do
	local QuestionLabel = Instance.new("TextLabel", Scroll)
	QuestionLabel.Size = UDim2.new(1, -10, 0, 40)
	QuestionLabel.Text = "‚ùì " .. qa.question .. "\nüìù " .. qa.answer
	QuestionLabel.TextWrapped = true
	QuestionLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	QuestionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	QuestionLabel.TextXAlignment = Enum.TextXAlignment.Left
	QuestionLabel.TextYAlignment = Enum.TextYAlignment.Top
	QuestionLabel.Font = Enum.Font.SourceSans
	QuestionLabel.TextSize = 16
end

-- Toggle ·∫©n/hi·ªán
ToggleBtn.MouseButton1Click:Connect(function()
	MainFrame.Visible = not MainFrame.Visible
end)

local Tips = {
    "üåª Tr·ªìng nhi·ªÅu c√¢y c√πng lo·∫°i ƒë·ªÉ nh·∫≠n bonus!",
    "üõí Gh√© thƒÉm shop th∆∞·ªùng xuy√™n ƒë·ªÉ n√¢ng c·∫•p c√¥ng c·ª•!",
    "üêå D·ªçn s·∫°ch s√™n ƒë·ªÉ tr√°nh gi·∫£m nƒÉng su·∫•t!",
    "üíß Lu√¥n t∆∞·ªõi n∆∞·ªõc ƒë√∫ng th·ªùi ƒëi·ªÉm ƒë·ªÉ c√¢y ph√°t tri·ªÉn nhanh h∆°n!",
    "üåü S·ª≠ d·ª•ng ph√¢n b√≥n ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô tƒÉng tr∆∞·ªüng!"
}

-- UI ph·∫ßn hi·ªÉn th·ªã m·∫πo
local TipsFrame = Instance.new("Frame")
TipsFrame.Size = UDim2.new(0, 280, 0, 60)
TipsFrame.Position = UDim2.new(1, -290, 1, -140)
TipsFrame.BackgroundColor3 = Color3.fromRGB(255, 250, 200)
TipsFrame.BorderSizePixel = 1
TipsFrame.Visible = true
TipsFrame.Parent = ScreenGui

local TipText = Instance.new("TextLabel")
TipText.Size = UDim2.new(1, 0, 1, 0)
TipText.BackgroundTransparency = 1
TipText.TextColor3 = Color3.fromRGB(80, 60, 0)
TipText.Font = Enum.Font.Ubuntu
TipText.TextScaled = true
TipText.TextWrapped = true
TipText.Parent = TipsFrame

-- Ch·ª©c nƒÉng c·∫≠p nh·∫≠t m·∫πo m·ªói 20 gi√¢y
spawn(function()
	while wait(20) do
		local randomTip = Tips[math.random(1, #Tips)]
		TipText.Text = "üí° M·∫πo: " .. randomTip
	end
end)

-- T·∫°o GUI ch√≠nh
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "AI_Greet_GUI"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 300, 0, 200)
Frame.Position = UDim2.new(0.5, -150, 0.5, -100)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.Visible = true
Frame.Active = true
Frame.Draggable = true

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 12)

-- N√∫t thu nh·ªè/m·ªü r·ªông
local ToggleButton = Instance.new("TextButton", ScreenGui)
ToggleButton.Size = UDim2.new(0, 30, 0, 30)
ToggleButton.Position = UDim2.new(0, 10, 0, 10)
ToggleButton.Text = "üí¨"
ToggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

local function toggleFrame()
	Frame.Visible = not Frame.Visible
end
ToggleButton.MouseButton1Click:Connect(toggleFrame)

-- Nh√£n hi·ªÉn th·ªã ƒëo·∫°n h·ªôi tho·∫°i
local MessageLabel = Instance.new("TextLabel", Frame)
MessageLabel.Size = UDim2.new(1, -20, 1, -20)
MessageLabel.Position = UDim2.new(0, 10, 0, 10)
MessageLabel.TextWrapped = true
MessageLabel.Font = Enum.Font.Gotham
MessageLabel.TextSize = 16
MessageLabel.TextColor3 = Color3.new(1, 1, 1)
MessageLabel.BackgroundTransparency = 1

-- Danh s√°ch h·ªôi tho·∫°i ch√†o h·ªèi ng·∫´u nhi√™n
local greetings = {
	"√ä, m l√† ai z·ª£?",
	"Ch√†o! T l√† AI h∆∞·ªõng d·∫´n ƒë√¢y üòé",
	"C·∫ßn gi√∫p g√¨ th√¨ h·ªèi tao nh√°!",
	"Hello, t ƒëang canh v∆∞·ªùn n√®, m c·∫ßn g√¨?",
	"√ä ku! V√¥ tr·ªìng c√¢y ch∆∞a ƒë√≥?",
	"Xin ch√†o! T l√† tr·ª£ l√Ω ·∫£o c·ªßa game n√†y!",
	"Tr·ªùi n√≥ng v√£i, nh·ªõ t∆∞·ªõi c√¢y ƒë√≥ ~ üå±"
}

-- Hi·ªÉn th·ªã ƒëo·∫°n ch√†o ng·∫´u nhi√™n
local function greet()
	local chosen = greetings[math.random(1, #greetings)]
	MessageLabel.Text = chosen
end

greet() -- G·ªçi khi kh·ªüi ƒë·ªông

local AdvancedQnA = {
    ["c√≥ c√°ch n√†o ki·∫øm ti·ªÅn nhanh kh√¥ng?"] = {
        "B·∫°n n√™n tr·ªìng lo·∫°i c√¢y gi√° tr·ªã cao nh∆∞ C√¢y Ti·ªÅn ho·∫∑c C√¢y V√†ng!",
        "Th·ª≠ ƒë·∫ßu t∆∞ v√†o ph√¢n b√≥n tƒÉng tr∆∞·ªüng nh√©!",
        "Nhi·ªÅu ng∆∞·ªùi d√πng chi·∫øn thu·∫≠t m·ªü √¥ nhanh r·ªìi tr·ªìng li√™n t·ª•c.",
    },
    ["t·∫°i sao c√¢y kh√¥ng l·ªõn?"] = {
        "C√≥ th·ªÉ b·∫°n qu√™n t∆∞·ªõi n∆∞·ªõc ƒë√≥!",
        "Nh·ªõ ƒë·∫∑t c√¢y ·ªü khu v·ª±c c√≥ √°nh s√°ng nh√©!",
        "C√¢y c·∫ßn th·ªùi gian, ki√™n nh·∫´n ch√∫t n√†o!",
    },
    ["c√°ch n√¢ng c·∫•p watering can?"] = {
        "B·∫°n c√≥ th·ªÉ t√¨m NPC ·ªü g√≥c tr√°i b·∫£n ƒë·ªì.",
        "ƒê·ªïi xu ho·∫∑c v·∫≠t ph·∫©m hi·∫øm ƒë·ªÉ n√¢ng c·∫•p b√¨nh t∆∞·ªõi.",
        "L√™n c·∫•p v√† s·∫Ω m·ªü kh√≥a t·ª± ƒë·ªông!",
    },
}

-- Ph·∫£n h·ªìi n√¢ng cao
function respondAdvanced(input)
    input = string.lower(input)
    if AdvancedQnA[input] then
        local responses = AdvancedQnA[input]
        local index = math.random(1, #responses)
        return responses[index]
    end
    return nil
end

--// PH·∫¶N 9: Mutation GUI T·ª∞ T·∫†O \\--

local mutationFrame = Instance.new("Frame")
mutationFrame.Size = UDim2.new(0, 250, 0, 270)
mutationFrame.Position = UDim2.new(0, 400, 0, 120)
mutationFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
mutationFrame.BorderSizePixel = 0
mutationFrame.Visible = false
mutationFrame.Name = "MutationFrame"
mutationFrame.Parent = mainGui

local mutationTitle = Instance.new("TextLabel")
mutationTitle.Size = UDim2.new(1, 0, 0, 30)
mutationTitle.BackgroundTransparency = 1
mutationTitle.Text = "üß¨ Mutation Info"
mutationTitle.Font = Enum.Font.SourceSansBold
mutationTitle.TextSize = 20
mutationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
mutationTitle.Parent = mutationFrame

local scrolling = Instance.new("ScrollingFrame")
scrolling.Size = UDim2.new(1, 0, 1, -30)
scrolling.Position = UDim2.new(0, 0, 0, 30)
scrolling.CanvasSize = UDim2.new(0, 0, 0, 0)
scrolling.BackgroundTransparency = 1
scrolling.ScrollBarThickness = 5
scrolling.Parent = mutationFrame

local uiList = Instance.new("UIListLayout")
uiList.Padding = UDim.new(0, 6)
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Parent = scrolling

-- D·ªØ li·ªáu mutation m·∫´u
local mutations = {
    {Parents = {"Sunflower", "Cactus"}, Result = "üåµ Spiked Sunflower", Chance = 0.15},
    {Parents = {"Rose", "Tulip"}, Result = "üåà Rainbow Bloom", Chance = 0.1},
    {Parents = {"Carrot", "Pumpkin"}, Result = "ü•ï Mega Veggie", Chance = 0.2},
    {Parents = {"Wheat", "Corn"}, Result = "üåæ Golden Harvest", Chance = 0.05}
}

for _, mut in pairs(mutations) do
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 35)
    label.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextWrapped = true
    label.TextSize = 14
    label.Font = Enum.Font.Gotham
    label.Text = string.format("üîÅ %s + %s ‚Üí %s\nüéØ T·ªâ l·ªá: %d%%", mut.Parents[1], mut.Parents[2], mut.Result, mut.Chance * 100)
    label.Parent = scrolling
end

scrolling.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)

-- N√∫t m·ªü GUI Mutation
local mutationBtn = Instance.new("TextButton")
mutationBtn.Size = UDim2.new(0, 120, 0, 30)
mutationBtn.Position = UDim2.new(0, 140, 0, 360)
mutationBtn.Text = "üß¨ Mutation Info"
mutationBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
mutationBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
mutationBtn.Font = Enum.Font.GothamBold
mutationBtn.TextSize = 14
mutationBtn.Parent = mainGui

mutationBtn.MouseButton1Click:Connect(function()
    mutationFrame.Visible = not mutationFrame.Visible
end)

-- C√¥ng th·ª©c l·ª£i nhu·∫≠n theo th·ªùi gian
local function calculateProfit(seed)
    local profit = seed.sellPrice - seed.buyPrice
    local profitPerSec = profit / seed.growTime
    return profitPerSec
end

-- Danh s√°ch h·∫°t gi·ªëng
local seeds = {
    {name="Carrot", buyPrice=10, sellPrice=20, growTime=30},
    {name="Tomato", buyPrice=15, sellPrice=35, growTime=50},
    {name="Corn", buyPrice=25, sellPrice=60, growTime=70},
    {name="Strawberry", buyPrice=40, sellPrice=90, growTime=80}
}

-- T√¨m h·∫°t l·ªùi nh·∫•t
local function getBestSeed()
    local bestSeed = nil
    local bestRate = -math.huge

    for _, seed in ipairs(seeds) do
        local rate = calculateProfit(seed)
        if rate > bestRate then
            bestRate = rate
            bestSeed = seed
        end
    end

    return bestSeed
end

-- Hi·ªÉn th·ªã ra GUI ho·∫∑c console
local best = getBestSeed()
print("üå± H·∫°t gi·ªëng l·ªùi nh·∫•t hi·ªán t·∫°i l√†: "..best.name.." (L·ªùi/t gi√¢y: "..math.floor((best.sellPrice - best.buyPrice)/best.growTime * 100)/100 .. "$/s)")

-- Danh s√°ch gi√° c√¢y trong Seed Shop (v√≠ d·ª•, c·∫ßn c·∫≠p nh·∫≠t ƒë√∫ng gi√° trong game)
local Seeds = {
    {Name = "Carrot", Price = 10, GrowthTime = 15, SellPrice = 20, MutationRate = 0.05},
    {Name = "Tomato", Price = 25, GrowthTime = 20, SellPrice = 45, MutationRate = 0.10},
    {Name = "Pumpkin", Price = 60, GrowthTime = 35, SellPrice = 110, MutationRate = 0.15},
    {Name = "Cabbage", Price = 100, GrowthTime = 60, SellPrice = 200, MutationRate = 0.25},
    {Name = "Golden Apple", Price = 500, GrowthTime = 120, SellPrice = 1500, MutationRate = 0.50}
}

-- H√†m t√≠nh l·ªùi/l·ªó + hi·ªáu su·∫•t theo th·ªùi gian
local function analyzeSeeds()
    print("===== PH√ÇN T√çCH C√ÇY TR·ªíNG =====")
    for _, seed in pairs(Seeds) do
        local profit = seed.SellPrice - seed.Price
        local profitPerSecond = profit / seed.GrowthTime
        local mutationRate = seed.MutationRate

        print("üå± " .. seed.Name)
        print("üí∞ Gi√° mua: " .. seed.Price .. " | üí∏ Gi√° b√°n: " .. seed.SellPrice)
        print("‚è±Ô∏è Th·ªùi gian l·ªõn: " .. seed.GrowthTime .. "s")
        print("üìà L·ª£i nhu·∫≠n: " .. profit .. " | üîÅ L·ª£i nhu·∫≠n/s: " .. string.format("%.2f", profitPerSecond))
        print("üß¨ T·ªâ l·ªá Mutation: " .. (mutationRate * 100) .. "%")
        print("-----------------------------------")
    end
end

-- G·ªçi h√†m ph√¢n t√≠ch
analyzeSeeds()
